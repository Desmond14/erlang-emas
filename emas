#!/usr/bin/env escript

-define(PROGRAM, "emas").


main(Args) ->
    add_deps(),
    Options = get_options(Args),
    Time = get_time(Options),
    emas:start(Time, Options).


add_deps() ->
    code:add_patha("./ebin"),
    code:add_pathsa(filelib:wildcard("./deps/*/ebin")).

get_options(Args) ->
    Specs = emas_config:options_specs(),
    Specs2 = add_time(Specs),

    Options =
        case getopt:parse(Specs2, Args) of
            {ok, {Parsed, [] = _Others} } ->
                Parsed;

            {ok, {_Parsed, Others}} ->
                getopt:usage(Specs2, ?PROGRAM),
                erlang:exit("Not supported options", Others);

            {error, Data} ->
                getopt:usage(Specs2, ?PROGRAM),
                erlang:exit("Error parsing args", Data)
        end,
    Options.


add_time(Spec) ->
    [time_spec()|
     Spec].

time_spec() ->
    {time, undefined, "time", integer,
     "amount of time to run given simulaiton, in milliseconds"}.

get_time(Options) ->
    case proplists:get_value(time, Options) of
        undefined ->
            Specs = add_time(emas_config:options_specs()),
            getopt:usage(Specs, ?PROGRAM),
            erlang:exit("Missing time argument");
        Time ->
            Time
    end.
            
    
